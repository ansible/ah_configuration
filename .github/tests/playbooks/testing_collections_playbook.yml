---
- name: Testing Galaxy
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - infra.ah_configuration
  pre_tasks:
    - name: Include vars from ah_configs directory
      ansible.builtin.include_vars:
        dir: ./ah_configs
        extensions: ["yml"]
      tags:
        - always

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ ah_configuration_working_dir }}"
        state: directory
        mode: '0755'

  tasks:
    - name: Authenticate and get an API token
      ah_token:
        ah_host: "{{ ah_hostname }}"
        ah_username: "{{ ah_username }}"
        ah_password: "{{ ah_password }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Create ansible config file
      ansible.builtin.include_role:
        name: ansible_config

    - name: Create namespace
      ansible.builtin.include_role:
        name: namespace

    - name: Rename namespace
      ansible.builtin.include_role:
        name: namespace
      vars:
        ah_namespaces:
          - name: test_namespace
            new_name: test_namespace_renamed

    - name: Delete renamed namespace
      ansible.builtin.include_role:
        name: namespace
      vars:
        ah_namespaces:
          - name: test_namespace_renamed
            state: absent

    - name: Upload Collection
      ansible.builtin.include_role:
        name: collection

    - name: Overwrite Collection
      ansible.builtin.include_role:
        name: collection
      vars:
        ah_collections: "{{ ah_collections_overwrite }}"
        
    - name: Publish Collections
      ansible.builtin.include_role:
        name: publish
      vars:
        ah_collections: "{{ ah_git_collections }}"

    - name: Remove collection
      ah_collection:
        namespace: infra
        name: ah_configuration
        version: 0.9.2
        state: absent
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

<<<<<<< HEAD
    - name: Configure community repo
      ah_repository:
        name: community
        url: https://galaxy.ansible.com/api/
        requirements:
          - name: infra.ah_configuration
          - name: redhat_cop.controller_configuration
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Configure community repo from file
      ah_repository:
        name: community
        url: https://galaxy.ansible.com/api/
        requirements_file: files/collection_requirement_file.yml
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Sync community repo
      ah_repository_sync:
        name: community
        wait: true
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Configure rh-certified repo
      ah_repository:
        name: rh-certified
        url: https://cloud.redhat.com/api/automation-hub/
        auth_url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        token: aabbcc
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

=======
>>>>>>> 328e43a265ab2bf03bb5372108c4189681ff40f9
    - name: Add EE Registry
      ah_ee_registry:
        name: myreg
        url: https://registry.redhat.io
        ah_host: "{{ ah_hostname }}"
        ah_username: "{{ ah_username }}"
        ah_password: "{{ ah_password }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Download Tower tarball
      ansible.builtin.get_url:
        url: https://galaxy.ansible.com/download/redhat_cop-tower_configuration-1.5.2-3.8.2.tar.gz
        dest: "{{playbook_dir}}/redhat_cop-tower_configuration-1.5.2-3.8.2.tar.gz"
        mode: '0440'

    - name: Upload Tower collection to automation hub
      ah_collection_upload:
        path: "{{playbook_dir}}/redhat_cop-tower_configuration-1.5.2-3.8.2.tar.gz"
        wait: true
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Deauthenticate
      ah_token:
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"
        state: absent
...
